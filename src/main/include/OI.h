// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef OI_H
#define OI_H

#include "frc/WPILib.h"

class OI {
private:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS			
	std::shared_ptr<frc::Joystick> co_Pilot;
	std::shared_ptr<frc::JoystickButton> fightRT;
	std::shared_ptr<frc::JoystickButton> fightLT;
	std::shared_ptr<frc::JoystickButton> fightSR;
	std::shared_ptr<frc::JoystickButton> fightSL;
	std::shared_ptr<frc::JoystickButton> fightOption;
	std::shared_ptr<frc::JoystickButton> fightShare;
	std::shared_ptr<frc::JoystickButton> fightRB;
	std::shared_ptr<frc::JoystickButton> fightLB;
	std::shared_ptr<frc::JoystickButton> fightY;
	std::shared_ptr<frc::JoystickButton> fightX;
	std::shared_ptr<frc::JoystickButton> fightB;
	std::shared_ptr<frc::JoystickButton> fightA;
	std::shared_ptr<frc::Joystick> driver;
	std::shared_ptr<frc::JoystickButton> rStickIn;
	std::shared_ptr<frc::JoystickButton> lStickIn;
	std::shared_ptr<frc::JoystickButton> buttonRB;
	std::shared_ptr<frc::JoystickButton> buttonLB;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	OI();

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES

	std::shared_ptr<frc::Joystick> getDriver();
	std::shared_ptr<frc::Joystick> getCo_Pilot();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES

	static const int LEFT_Y_AXIS = 1;
	static const int RIGHT_Y_AXIS = 5;
	static const int L_Trigger = 2;
	static const int R_Trigger = 3;
};

#endif
